/**
 * Nesting of try statements can occur in less obvious ways when 
 * method calls are involved . for example , you can enclose a call to
 * a method within a try block, inside that method is another try statement
 * Inside that method is another try statement . In this case , the try within the method is 
 * still nested inside the outer try block, which calls the method. Here is the previous
 * program recorded so that the nested try block is moved inside the method nestry()
 */
/**
 * Try statements can be implicitly nested via calls to methods 
 */
public class MethNextTry {
    static void nesttry(int a) {
        try { //nested try block
            /**
             * If one command - line arg is used , then a divide-by-zero exception
             * will be generated by the following code
             */
            if (a == 1) a = a/(a-a); // division by zero

            /**
             * If two command-line args are used, then generate an out-of-bond exception
             */

            if (a == 2) {
                int c[] = {1};
                c[42] = 99; // generate an out-of-bounds exception
            }

        }
        catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Array index out-of-bounds: " + e);
        }

    }

    public static void main(String args[]) {
        try {
            int a = args.length;
            /**
             * If no command-line args are present, the following statement will
             * generate a divide-by-zero exception
             */
            int b = 42 / a;
            System.out.println("a = " + a);

            nesttry(a);
        }
        catch (ArithmeticException e) {
            System.out.println("Divide by 0: " + e);
        } 
    }
}
